{"version":3,"sources":["reducers/galleryReducers.js","actions/galleryActions.js","components/Loader/Loader.js","components/Menu/Menu.js","components/Gallery/Gallery.js","components/Main/Main.js","App.js","index.js"],"names":["INITIAL_STATE","photos","galleryReducers","state","action","type","galleryActions","dispatch","addPhotos","Loader","className","Menu","useState","data","setData","isAlbum","setIsAlbum","location","useLocation","useEffect","a","pathname","includes","path","axios","get","response","console","error","map","el","activeClassName","to","id","name","title","defaultProps","connect","Gallery","isLast","setIsLast","length","photo","index","onLoad","src","thumbnailUrl","alt","Main","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"gRAAMA,EAAgB,CACpBC,OAAQ,IAeKC,EAZS,WAAoC,IAAnCC,EAAkC,uDAA1BH,EAAeI,EAAW,uCACzD,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEF,OAAQG,EAAOH,SAEnB,QACE,OAAOE,I,uFCREG,EAJQ,SAACC,GAAD,MAAe,CACpCC,UAAW,SAACP,GAAD,OAAYM,EAAS,CAAEF,KAAM,aAAcJ,cCIzCQ,G,YAFA,kBAAM,qBAAKC,UAAU,aCQ9BC,EAAO,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SAAe,EACLK,mBAAS,MADJ,mBACtBC,EADsB,KAChBC,EADgB,OAECF,oBAAS,GAFV,mBAEtBG,EAFsB,KAEbC,EAFa,KAGvBC,EAAWC,cAqBjB,OAnBAC,oBAAS,sBAAC,8BAAAC,EAAA,6DACJH,EAASI,SAASC,SAAS,UAC7BN,GAAW,GAEXA,GAAW,GAJL,SAOAO,EAA6B,MAAtBN,EAASI,SAAmB,SAAWJ,EAASI,SAPvD,SAQiBG,IAAMC,IAAN,UAfjB,wCAeiB,OAAmBF,IARpC,OAQAG,EARA,OASDT,EAASI,SAASC,SAAS,UAG9BhB,EAAeC,GAAUC,UAAUkB,EAASb,MAF5CC,EAAQY,EAASb,MAVb,gDAeNc,QAAQC,MAAR,MAfM,yDAiBP,CAACX,IAGF,qBAAKP,UAAU,OAAf,SAEIG,EACE,qBAAKH,UAAU,aAAf,SACE,6BAEEG,EACEA,EAAKgB,KAAI,SAACC,GAAD,OACP,+BACE,cAAC,IAAD,CAASC,gBAAgB,oBAAoBrB,UAAU,aAAasB,GAAIjB,EAAO,kBAAce,EAAGG,GAAjB,4BAAyCH,EAAGG,GAA5C,WAA/E,SAAyIH,EAAGI,MAAQJ,EAAGK,QACvJ,yBAFOL,EAAGG,OAKZ,SAIN,cAAC,EAAD,OAMZtB,EAAKyB,aAAe,CAClB7B,SAAU,cAOG8B,oBAAU1B,GCxDnB2B,G,MAAU,SAAC,GAA0B,IAAxBrC,EAAuB,EAAvBA,OAAQM,EAAe,EAAfA,SAAe,EACZK,oBAAS,GADG,mBACjC2B,EADiC,KACzBC,EADyB,KAWxC,OARArB,qBAAU,kBAAM,WACdb,EAAeC,GAAUC,UAAU,OAClC,IAEHW,qBAAU,WACRqB,GAAU,KACT,CAACvC,IAGF,sBAAKS,UAAU,UAAf,UACI6B,EAAsB,KAAb,cAAC,EAAD,IACX,oBAAI7B,UAAS,wBAAoB6B,EAAiC,KAAxB,uBAA1C,SAEItC,EAAOwC,OAAS,EAAIxC,EAAO4B,KAAI,SAACa,EAAOC,GAAR,OAC7B,6BACE,qBAAKjC,UAAU,iBAAf,SACE,qBAAKkC,OAAQ,kBAAOD,IAAU1C,EAAOwC,OAAS,EAAID,GAAU,GAAQ,MAAOK,IAAKH,EAAMI,aAAcC,IAAKL,EAAMT,QAF1GS,EAAMT,OAKZ,YAOfK,EAAQF,aAAe,CACrBnC,OAAQ,GACRM,SAAU,cAQG8B,mBA3CS,SAAClC,GAAD,MAAY,CAClCF,OAAQE,EAAMF,UA0CDoC,CAAyBC,GCjCzBU,EATF,kBACX,sBAAKtC,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOa,KAAK,qBAAZ,SACE,cAAC,EAAD,UCGS0B,EARH,kBACV,cAAC,IAAD,UACE,cAAC,IAAD,CAAO1B,KAAK,IAAZ,SACE,cAAC,EAAD,SCDA2B,EAAQC,YAAYjD,GAE1BkD,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.9ac50302.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  photos: {},\n};\n\nconst galleryReducers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'ADD_PHOTOS':\n      return {\n        ...state,\n        photos: action.photos,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default galleryReducers;\n","const galleryActions = (dispatch) => ({\n  addPhotos: (photos) => dispatch({ type: 'ADD_PHOTOS', photos }),\n});\n\nexport default galleryActions;\n","import React from 'react';\nimport './Loader.css';\n\nconst Loader = () => <div className=\"loader\" />;\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport galleryActions from '../../actions/galleryActions';\nimport './Menu.scss';\nimport Loader from '../Loader/Loader';\n\nconst url = 'https://jsonplaceholder.typicode.com';\n\nconst Menu = ({ dispatch }) => {\n  const [data, setData] = useState(null);\n  const [isAlbum, setIsAlbum] = useState(false);\n  const location = useLocation();\n\n  useEffect(async () => {\n    if (location.pathname.includes('albums')) {\n      setIsAlbum(true);\n    } else {\n      setIsAlbum(false);\n    }\n    try {\n      const path = location.pathname === '/' ? '/users' : location.pathname;\n      const response = await axios.get(`${url}${path}`);\n      if (!location.pathname.includes('photos')) {\n        setData(response.data);\n      } else {\n        galleryActions(dispatch).addPhotos(response.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [location]);\n\n  return (\n    <nav className=\"menu\">\n      {\n        data ? (\n          <div className=\"menu__list\">\n            <ul>\n              {\n              data ? (\n                data.map((el) => (\n                  <li key={el.id}>\n                    <NavLink activeClassName=\"menu__link_active\" className=\"menu__link\" to={isAlbum ? `/albums/${el.id}/photos` : `/users/${el.id}/albums`}>{el.name || el.title}</NavLink>\n                    <hr />\n                  </li>\n                ))\n              ) : null\n            }\n            </ul>\n          </div>\n        ) : <Loader />\n      }\n    </nav>\n  );\n};\n\nMenu.defaultProps = {\n  dispatch: () => {},\n};\n\nMenu.propTypes = {\n  dispatch: PropTypes.func,\n};\n\nexport default connect()(Menu);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Gallery.scss';\nimport Loader from '../Loader/Loader';\nimport galleryActions from '../../actions/galleryActions';\n\nconst mapStateToProps = (state) => ({\n  photos: state.photos,\n});\n\nconst Gallery = ({ photos, dispatch }) => {\n  const [isLast, setIsLast] = useState(false);\n\n  useEffect(() => () => {\n    galleryActions(dispatch).addPhotos([]);\n  }, []);\n\n  useEffect(() => {\n    setIsLast(false);\n  }, [photos]);\n\n  return (\n    <div className=\"gallery\">\n      {!isLast ? <Loader /> : null}\n      <ul className={`gallery__list ${!isLast ? 'gallery__list_empty' : null}`}>\n        {\n          photos.length > 0 ? photos.map((photo, index) => (\n            <li key={photo.id}>\n              <div className=\"gallery__photo\">\n                <img onLoad={() => (index === photos.length - 1 ? setIsLast(true) : null)} src={photo.thumbnailUrl} alt={photo.id} />\n              </div>\n            </li>\n          )) : null\n        }\n      </ul>\n    </div>\n  );\n};\n\nGallery.defaultProps = {\n  photos: [],\n  dispatch: () => {},\n};\n\nGallery.propTypes = {\n  photos: PropTypes.oneOfType(PropTypes.array, PropTypes.object),\n  dispatch: PropTypes.func,\n};\n\nexport default connect(mapStateToProps)(Gallery);\n","import React from 'react';\nimport {\n  Route,\n} from 'react-router-dom';\nimport './Main.css';\nimport Menu from '../Menu/Menu';\nimport Gallery from '../Gallery/Gallery';\n\nconst Main = () => (\n  <div className=\"main\">\n    <Menu />\n    <Route path=\"/albums/:id/photos\">\n      <Gallery />\n    </Route>\n  </div>\n);\n\nexport default Main;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport Main from './components/Main/Main';\n\nconst App = () => (\n  <Router>\n    <Route path=\"/\">\n      <Main />\n    </Route>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport galleryReducers from './reducers/galleryReducers';\nimport 'normalize.css';\nimport './index.scss';\nimport App from './App';\n\nconst store = createStore(galleryReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}